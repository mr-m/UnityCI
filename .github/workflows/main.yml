name: CI
on: [push]
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
jobs:
  build:
    runs-on: ubuntu-latest
    container: unityci/editor:2018.4.15f1-windows-mono-0.9.0
    steps:

    - name: Checkout Project
      uses: actions/checkout@v1
      with:
        lfs: true

    - name: Restore Library from cache
      uses: actions/cache@v1.1.0
      with:
        path: Library
        key: Library

    - name: Activate Unity
      run: |
        echo "$UNITY_LICENSE" > /Unity_v2018.x.ulf

        /opt/unity/Editor/Unity \
        -batchmode -nographics -quit -logFile \
        -manualLicenseFile /Unity_v2018.x.ulf || true

        rm /Unity_v2018.x.ulf

    - name: Run editor tests
      shell: sh {0}
      run: |
        xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' \
        /opt/unity/Editor/Unity \
        -batchmode -logFile \
        -projectPath . \
        -runTests -testPlatform editmode \
        -testResults /Build/TestResults-EditMode.xml

        UNITY_EXIT_CODE=$?

        if [ $UNITY_EXIT_CODE -eq 0 ]; then
          cat /Build/TestResults-EditMode.xml | grep test-run  | grep result
          echo "Run succeeded, no failures occurred"
        elif [ $UNITY_EXIT_CODE -eq 2 ]; then
          cat /Build/TestResults-EditMode.xml | grep test-run  | grep Failed
          cat /Build/TestResults-EditMode.xml | grep test-case | grep Failed
          echo "Run succeeded, some tests failed"
        elif [ $UNITY_EXIT_CODE -eq 3 ]; then
          echo "Run failure (other failure)"
        else
          echo "Unexpected exit code $UNITY_EXIT_CODE"
        fi

        exit $UNITY_EXIT_CODE

    - name: Upload editor test results
      uses: actions/upload-artifact@v2
      with:
        name: TestResults-EditMode.xml
        path: /Build/TestResults-EditMode.xml

    - name: Run runtime tests
      shell: sh {0}
      run: |
        xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' \
        /opt/unity/Editor/Unity \
        -batchmode -logFile \
        -projectPath . \
        -runTests -testPlatform playmode \
        -testResults /Build/TestResults-PlayMode.xml

        UNITY_EXIT_CODE=$?

        if [ $UNITY_EXIT_CODE -eq 0 ]; then
          cat /Build/TestResults-PlayMode.xml | grep test-run  | grep result
          echo "Run succeeded, no failures occurred"
        elif [ $UNITY_EXIT_CODE -eq 2 ]; then
          cat /Build/TestResults-PlayMode.xml | grep test-run  | grep Failed
          cat /Build/TestResults-PlayMode.xml | grep test-case | grep Failed
          echo "Run succeeded, some tests failed"
        elif [ $UNITY_EXIT_CODE -eq 3 ]; then
          echo "Run failure (other failure)"
        else
          echo "Unexpected exit code $UNITY_EXIT_CODE"
        fi

        exit $UNITY_EXIT_CODE

    - name: Upload runtime test results
      uses: actions/upload-artifact@v2
      with:
        name: TestResults-PlayMode.xml
        path: /Build/TestResults-PlayMode.xml

    - name: Build unitypackage
      run: |
        mkdir -p /Build

        /opt/unity/Editor/Unity \
        -batchmode -nographics -quit -logFile \
        -projectPath . \
        -exportPackage \
        Assets/Scripts/ColorHash.cs \
        /Build/ColorHash.unitypackage

    - name: Upload unitypackage
      uses: actions/upload-artifact@v2
      with:
        name: ColorHash.unitypackage
        path: /Build/ColorHash.unitypackage

    - name: Build Win64
      run: |
        xvfb-run --auto-servernum --server-args='-screen 0 640x480x24' \
        /opt/unity/Editor/Unity \
        -batchmode -quit -logFile \
        -projectPath . \
        -buildTarget Win64 \
        -buildWindows64Player /Build/Win64/UnityCI.exe

    - name: Upload Win64
      uses: actions/upload-artifact@v2
      with:
        name: Build-Win64
        path: /Build/Win64
